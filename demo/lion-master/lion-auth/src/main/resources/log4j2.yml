#   Copyright 2019 Yanzheng (https://github.com/micyo202). All rights reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# status: 共有8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
# monitorInterval: 设置配置文件的动态加载时间的，单位是秒
Configuration:
  status: WARN
  monitorInterval: 60
  Properties: # 定义全局变量
    Property:
      - name: log.path
        value: ./logs
      - name: log.name
        value: lion-auth
      - name: log.pattern
        value: "%d{yyyy-MM-dd HH:mm:ss.SSS} %p %pid (%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId}) [%t] %C{1.}:%L -> %m%n"
      - name: log.size
        value: 50MB
      - name: log.num
        value: 200
  Appenders:
    Console:  # 输出到控制台
      name: CONSOLE
      target: SYSTEM_OUT
      PatternLayout:
        pattern: "%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight{%p} %magenta{%pid} %blue{(%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId})} [%t] %cyan{%C{1.}}:%L -> %white{%m%n}"
    # 日志文件输出设置
    RollingFile:
      # 全部日志
      - name: ALL
        fileName: ${log.path}/${log.name}/${log.name}.log
        filePattern: "${log.path}/${log.name}/$${date:yyyyMMdd}/${log.name}_%d{yyyyMMdd}.%i.log"
        PatternLayout:
          pattern: ${log.pattern}
        Policies:
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
          SizeBasedTriggeringPolicy:  # 按大小
            size: ${log.size}
        DefaultRolloverStrategy:      # 文件数
          max: ${log.num}
      # 调试日志
      - name: DEBUG
        fileName: ${log.path}/${log.name}/${log.name}_debug.log
        filePattern: "${log.path}/${log.name}/$${date:yyyyMMdd}/${log.name}_debug_%d{yyyyMMdd}.%i.log"
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: INFO
              onMatch: DENY
              onMismatch: NEUTRAL
            - level: DEBUG
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
          SizeBasedTriggeringPolicy:  # 按大小
            size: ${log.size}
        DefaultRolloverStrategy:      # 文件数
          max: ${log.num}
      # 基本日志
      - name: INFO
        fileName: ${log.path}/${log.name}/${log.name}_info.log
        filePattern: "${log.path}/${log.name}/$${date:yyyyMMdd}/${log.name}_info_%d{yyyyMMdd}.%i.log"
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: WARN
              onMatch: DENY
              onMismatch: NEUTRAL
            - level: INFO
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
          SizeBasedTriggeringPolicy:  # 按大小
            size: ${log.size}
        DefaultRolloverStrategy:      # 文件数
          max: ${log.num}
      # 警告日志
      - name: WARN
        fileName: ${log.path}/${log.name}/${log.name}_warn.log
        filePattern: "${log.path}/${log.name}/$${date:yyyyMMdd}/${log.name}_warn_%d{yyyyMMdd}.%i.log"
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: ERROR
              onMatch: DENY
              onMismatch: NEUTRAL
            - level: WARN
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
          SizeBasedTriggeringPolicy:  # 按大小
            size: ${log.size}
        DefaultRolloverStrategy:      # 文件数
          max: ${log.num}
      # 错误日志
      - name: ERROR
        fileName: ${log.path}/${log.name}/${log.name}_error.log
        filePattern: "${log.path}/${log.name}/$${date:yyyyMMdd}/${log.name}_error_%d{yyyyMMdd}.%i.log"
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: ERROR
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
          SizeBasedTriggeringPolicy:  # 按大小
            size: ${log.size}
        DefaultRolloverStrategy:      # 文件数
          max: ${log.num}
  Loggers:
    Root:
      level: INFO
      AppenderRef:
        - ref: CONSOLE
        - ref: ALL
        - ref: DEBUG
        - ref: INFO
        - ref: WARN
        - ref: ERROR
# 指定包/类日志输出级别
#    Logger:
#      - name: com.lion
#        additivity: false
#        level: DEBUG
#        AppenderRef:
#          - ref: CONSOLE
#          - ref: ALL