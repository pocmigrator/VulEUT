import org.junit.Test;
import static org.junit.Assert.assertTrue;
import java.io.File;

public class CustomXMLMappingTest {

    @Test
    public void testVulnerabilityTriggered() {
        // Test input data (file path)
        String input = "...dir/CustomXMLMappings.xlsx";

        // Create a Java File from the input path
        File fileInput = new File(input);

        // Intercept the vulnerable method call
        MethodCallInterceptor.interceptor(
            org.apache.poi.xssf.extractor.XSSFExportToXml.class,
            "exportToXML",
            new Object[]{fileInput}
        );

        try {
            // Call the function under test
            CustomXMLMapping.main(new String[]{input});
        } catch (Exception e) {
            // Exception caught, do nothing
        }

        // Assert that the vulnerability was successfully triggered
        assertTrue(MethodCallInterceptor.isTriggered());
        assertTrue(MethodCallInterceptor.isConditionMet());
    }
}
