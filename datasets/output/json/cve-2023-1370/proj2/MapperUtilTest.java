import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class MapperUtilTest {

    @Test
    public void testVulnerabilityTriggered() {
        // Test input data based on the provided code snippet
        StringBuilder s = new StringBuilder();
        for (int i = 0; i < 10000; i++) {
            s.append("{\"a\":");
        }
        s.append("1");
        for (int i = 0; i < 10000; i++) {
            s.append("}");
        }
        String input = s.toString();

        // Intercept the vulnerable method call
        MethodCallInterceptor.interceptor(
            net.minidev.json.parser.JSONParser.class,
            "parse",
            new Object[]{input}
        );

        try {
            // Call the MapperUtil.toJSONObject method with the specified input
            MapperUtil.toJSONObject(input);
        } catch (Exception e) {
            // Exception caught, do nothing
        }

        // Verify that the vulnerability was triggered by checking MethodCallInterceptor.isTrigger
        assertTrue(MethodCallInterceptor.isTriggered());
        assertTrue(MethodCallInterceptor.isConditionMet());
    }
}
